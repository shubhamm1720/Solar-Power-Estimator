{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate}from\"react-router-dom\";import panelData from\"../data/panelData\";import sunlightData from\"../data/sunlightData\";import WeatherSimulator from\"./WeatherSimulator\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function EstimatorPage(){const[location,setLocation]=useState(\"\");const[powerKw,setPowerKw]=useState(\"\");const[panelId,setPanelId]=useState(\"\");const[weather,setWeather]=useState(\"sunny\");const navigate=useNavigate();const handleEstimate=()=>{const baseSunlight=sunlightData[location];const weatherMultiplier={sunny:1,partly:0.8,cloudy:0.6};const adjustedSunlight=baseSunlight*weatherMultiplier[weather];const panel=panelData.find(p=>p.id===panelId);const powerWatt=parseFloat(powerKw)*1000;const panelCount=Math.ceil(powerWatt/(panel.rating*adjustedSunlight));const result={location,powerKw,sunlight:adjustedSunlight.toFixed(2),panelCount,panel};localStorage.setItem(\"solarResult\",JSON.stringify(result));navigate(\"/result\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"estimator\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"ESTIMATOR\"}),/*#__PURE__*/_jsxs(\"select\",{value:location,onChange:e=>setLocation(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Location\"}),Object.keys(sunlightData).map(city=>/*#__PURE__*/_jsx(\"option\",{value:city,children:city},city))]}),/*#__PURE__*/_jsxs(\"select\",{value:panelId,onChange:e=>setPanelId(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select Panel Type\"}),panelData.map(panel=>/*#__PURE__*/_jsxs(\"option\",{value:panel.id,children:[panel.name,\" (\",panel.rating,\"W)\"]},panel.id))]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Power required (kW)\",value:powerKw,onChange:e=>setPowerKw(e.target.value)}),/*#__PURE__*/_jsx(WeatherSimulator,{weather:weather,setWeather:setWeather}),/*#__PURE__*/_jsx(\"button\",{onClick:handleEstimate,children:\"Calculate\"})]});}","map":{"version":3,"names":["React","useState","useNavigate","panelData","sunlightData","WeatherSimulator","jsx","_jsx","jsxs","_jsxs","EstimatorPage","location","setLocation","powerKw","setPowerKw","panelId","setPanelId","weather","setWeather","navigate","handleEstimate","baseSunlight","weatherMultiplier","sunny","partly","cloudy","adjustedSunlight","panel","find","p","id","powerWatt","parseFloat","panelCount","Math","ceil","rating","result","sunlight","toFixed","localStorage","setItem","JSON","stringify","className","children","value","onChange","e","target","Object","keys","map","city","name","type","placeholder","onClick"],"sources":["C:/Users/HP/Desktop/my-react-app/src/components/EstimatorPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport panelData from \"../data/panelData\";\r\nimport sunlightData from \"../data/sunlightData\";\r\nimport WeatherSimulator from \"./WeatherSimulator\";\r\n\r\nexport default function EstimatorPage() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [powerKw, setPowerKw] = useState(\"\");\r\n  const [panelId, setPanelId] = useState(\"\");\r\n  const [weather, setWeather] = useState(\"sunny\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleEstimate = () => {\r\n    const baseSunlight = sunlightData[location];\r\n    const weatherMultiplier = { sunny: 1, partly: 0.8, cloudy: 0.6 };\r\n    const adjustedSunlight = baseSunlight * weatherMultiplier[weather];\r\n\r\n    const panel = panelData.find((p) => p.id === panelId);\r\n    const powerWatt = parseFloat(powerKw) * 1000;\r\n    const panelCount = Math.ceil(powerWatt / (panel.rating * adjustedSunlight));\r\n\r\n    const result = {\r\n      location,\r\n      powerKw,\r\n      sunlight: adjustedSunlight.toFixed(2),\r\n      panelCount,\r\n      panel,\r\n    };\r\n\r\n    localStorage.setItem(\"solarResult\", JSON.stringify(result));\r\n    navigate(\"/result\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"estimator\">\r\n      <h2>ESTIMATOR</h2>\r\n      <select value={location} onChange={(e) => setLocation(e.target.value)}>\r\n        <option value=\"\">Select Location</option>\r\n        {Object.keys(sunlightData).map((city) => (\r\n          <option key={city} value={city}>{city}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={panelId} onChange={(e) => setPanelId(e.target.value)}>\r\n        <option value=\"\">Select Panel Type</option>\r\n        {panelData.map((panel) => (\r\n          <option key={panel.id} value={panel.id}>\r\n            {panel.name} ({panel.rating}W)\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Power required (kW)\"\r\n        value={powerKw}\r\n        onChange={(e) => setPowerKw(e.target.value)}\r\n      />\r\n\r\n      <WeatherSimulator weather={weather} setWeather={setWeather} />\r\n      <button onClick={handleEstimate}>Calculate</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}