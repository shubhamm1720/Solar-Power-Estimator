{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\last\\\\my-react-app\\\\src\\\\components\\\\EstimatorPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport panelData from \"../data/panelData\";\nimport sunlightData from \"../data/sunlightData\";\nimport WeatherSimulator from \"./WeatherSimulator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EstimatorPage() {\n  _s();\n  const [location, setLocation] = useState(\"\");\n  const [powerKw, setPowerKw] = useState(\"\");\n  const [panelId, setPanelId] = useState(\"\");\n  const [weather, setWeather] = useState(\"sunny\");\n  const navigate = useNavigate();\n  const handleEstimate = () => {\n    const baseSunlight = sunlightData[location];\n    const weatherMultiplier = {\n      sunny: 1,\n      partly: 0.8,\n      cloudy: 0.6\n    };\n    const adjustedSunlight = baseSunlight * weatherMultiplier[weather];\n    const panel = panelData.find(p => p.id === panelId);\n    const powerWatt = parseFloat(powerKw) * 1000;\n    const panelCount = Math.ceil(powerWatt / (panel.rating * adjustedSunlight));\n    const result = {\n      location,\n      powerKw,\n      sunlight: adjustedSunlight.toFixed(2),\n      panelCount,\n      panel\n    };\n    localStorage.setItem(\"solarResult\", JSON.stringify(result));\n    navigate(\"/result\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"estimator\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"ESTIMATOR\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: location,\n      onChange: e => setLocation(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Location\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), Object.keys(sunlightData).map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: city,\n        children: city\n      }, city, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: panelId,\n      onChange: e => setPanelId(e.target.value),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Panel Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), panelData.map(panel => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: panel.id,\n        children: [panel.name, \" (\", panel.rating, \"W)\"]\n      }, panel.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Power required (kW)\",\n      value: powerKw,\n      onChange: e => setPowerKw(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherSimulator, {\n      weather: weather,\n      setWeather: setWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEstimate,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(EstimatorPage, \"M2LlMv6fQ/AxK9OHTs7Y9bH8ZIk=\", false, function () {\n  return [useNavigate];\n});\n_c = EstimatorPage;\nvar _c;\n$RefreshReg$(_c, \"EstimatorPage\");","map":{"version":3,"names":["React","useState","useNavigate","panelData","sunlightData","WeatherSimulator","jsxDEV","_jsxDEV","EstimatorPage","_s","location","setLocation","powerKw","setPowerKw","panelId","setPanelId","weather","setWeather","navigate","handleEstimate","baseSunlight","weatherMultiplier","sunny","partly","cloudy","adjustedSunlight","panel","find","p","id","powerWatt","parseFloat","panelCount","Math","ceil","rating","result","sunlight","toFixed","localStorage","setItem","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","Object","keys","map","city","name","type","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/last/my-react-app/src/components/EstimatorPage.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport panelData from \"../data/panelData\";\r\nimport sunlightData from \"../data/sunlightData\";\r\nimport WeatherSimulator from \"./WeatherSimulator\";\r\n\r\nexport default function EstimatorPage() {\r\n  const [location, setLocation] = useState(\"\");\r\n  const [powerKw, setPowerKw] = useState(\"\");\r\n  const [panelId, setPanelId] = useState(\"\");\r\n  const [weather, setWeather] = useState(\"sunny\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleEstimate = () => {\r\n    const baseSunlight = sunlightData[location];\r\n    const weatherMultiplier = { sunny: 1, partly: 0.8, cloudy: 0.6 };\r\n    const adjustedSunlight = baseSunlight * weatherMultiplier[weather];\r\n\r\n    const panel = panelData.find((p) => p.id === panelId);\r\n    const powerWatt = parseFloat(powerKw) * 1000;\r\n    const panelCount = Math.ceil(powerWatt / (panel.rating * adjustedSunlight));\r\n\r\n    const result = {\r\n      location,\r\n      powerKw,\r\n      sunlight: adjustedSunlight.toFixed(2),\r\n      panelCount,\r\n      panel,\r\n    };\r\n\r\n    localStorage.setItem(\"solarResult\", JSON.stringify(result));\r\n    navigate(\"/result\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"estimator\">\r\n      <h2>ESTIMATOR</h2>\r\n      <select value={location} onChange={(e) => setLocation(e.target.value)}>\r\n        <option value=\"\">Select Location</option>\r\n        {Object.keys(sunlightData).map((city) => (\r\n          <option key={city} value={city}>{city}</option>\r\n        ))}\r\n      </select>\r\n\r\n      <select value={panelId} onChange={(e) => setPanelId(e.target.value)}>\r\n        <option value=\"\">Select Panel Type</option>\r\n        {panelData.map((panel) => (\r\n          <option key={panel.id} value={panel.id}>\r\n            {panel.name} ({panel.rating}W)\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <input\r\n        type=\"number\"\r\n        placeholder=\"Power required (kW)\"\r\n        value={powerKw}\r\n        onChange={(e) => setPowerKw(e.target.value)}\r\n      />\r\n\r\n      <WeatherSimulator weather={weather} setWeather={setWeather} />\r\n      <button onClick={handleEstimate}>Calculate</button>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}